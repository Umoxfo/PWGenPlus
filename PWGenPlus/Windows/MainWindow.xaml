<Window x:Name="mainWindow" x:Class="PWGenPlus.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:PWGenPlus"
        mc:Ignorable="d"
        Title="PWGenPlus" SizeToContent="WidthAndHeight" Topmost="{Binding IsChecked, ElementName=alwaysOnTopMenuItem}" MinHeight="530" MinWidth="800">

    <Window.Resources>
        <ResourceDictionary>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="IsEditable" Value="True"/>
                        <Setter Property="SelectedIndex" Value="0"/>
                    </Style>
            <Style TargetType="{x:Type GroupBox}">
                <Setter Property="Padding" Value="8,4,0,0"/>
                <Setter Property="Template" Value="{StaticResource CheckGroupBoxTemplate}"/>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Close" Executed="CloseCmdExecuted" CanExecute="CloseCmdCanExecute"/>
    </Window.CommandBindings>

    <DockPanel>
        <Menu x:Name="menu" DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_Profile">
                    <MenuItem x:Name="openProfileEditorMenuItem" Header="Profile Editor..." Click="OpenProfileEditorMenuItem_Click" />
                </MenuItem>
                <Separator/>
                <MenuItem x:Name="closeMenuItem" Command="ApplicationCommands.Close"/>
                <!--Header="_Exit"-->
            </MenuItem>
            <MenuItem Header="_Tools">
                <MenuItem Header="Clear Clipboard"/>
                <MenuItem x:Name="encryptClipboardMenuItem" Header="Encrypt Clipboard..." Click="EncryptClipboardMenuItem_Click"/>
                <MenuItem x:Name="decryptClipboardMenuItem" Header="Decrypt Clipboard..." Click="DecryptClipboardMenuItem_Click"/>
                <Separator/>
                <MenuItem x:Name="createRandomDataFileDialog" Header="Create Random Data File..." Click="CreateRandomDataFileMenuItem_Click"/>
                <Separator/>
                <MenuItem x:Name="createTrigramFileMenuItem" Header="Create Trigram File..." Click="CreateTrigramFileMenuItem_Click"/>
                <Separator/>
                <MenuItem Header="MP Password Generator..."/>
                <MenuItem Header="Deterministic Random Generator" IsEnabled="False">
                    <MenuItem Header="Reset"/>
                    <MenuItem Header="Deactivate"/>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Provide Additional Entropy">
                    <MenuItem Header="As Text..."/>
                    <MenuItem x:Name="fromFileMenuItem" Header="From File..." Click="FromFileMenuItem_Click"/>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Option">
                <MenuItem Header="Language">
                    <MenuItem Header="English" IsChecked="True"/>
                </MenuItem>
                <MenuItem x:Name="configMenuItem" Header="Configuration..." ItemsSource="{Binding Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Condition}}}" Click="ConfigMenuItem_Click"/>
                <Separator/>
                <MenuItem x:Name="alwaysOnTopMenuItem" Header="Always on Top" IsCheckable="True" CommandParameter="{Binding Topmost, ElementName=mainWindow}"/>
                <Separator/>
                <MenuItem Header="Save Settings on Exit" IsChecked="True" IsCheckable="True"/>
                <MenuItem Header="Save Settings Now"/>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem x:Name="openManualMenuItem" Header="Open Manual">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:LaunchUriOrFileAction/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <Separator/>
                <MenuItem x:Name="visitWebsiteMenuItem" Header="Visit Website">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:LaunchUriOrFileAction Path="http://pwgen-win.sourceforge.net"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <MenuItem x:Name="donateMenuItem" Header="Donate...">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:LaunchUriOrFileAction Path="http://sourceforge.net/donate/index.php?group_id=57385"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <Separator Margin="0"/>
                <MenuItem Header="Check for Updates" IsEnabled="False"/>
                <Separator/>
                <MenuItem x:Name="timeInfoMenuItem" Header="Timer Info..."/>
                <MenuItem Header="About PWGenPlus..."/>
            </MenuItem>
        </Menu>
        <Grid x:Name="passwordSettingsGrid" Grid.IsSharedSizeScope="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="8"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="8"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="8"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="8"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="8"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="16"/>
                <RowDefinition SharedSizeGroup="rowItem"/>
                <RowDefinition Height="8"/>
                <RowDefinition SharedSizeGroup="rowItem"/>
                <RowDefinition Height="8"/>
            </Grid.RowDefinitions>

            <!-- Characters -->
            <GroupBox x:Name="characterGroupBox" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3">
                <GroupBox.Header>
                    <CheckBox x:Name="charCheckBox" Content="Characters (Pass*word*)" IsChecked="True"/>
                </GroupBox.Header>
                <Grid IsEnabled="{Binding IsChecked, ElementName=charCheckBox}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="45*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="98*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="4"/>
                        <RowDefinition/>
                        <RowDefinition Height="4"/>
                        <RowDefinition/>
                        <RowDefinition Height="4"/>
                        <RowDefinition/>
                        <RowDefinition Height="4"/>
                        <RowDefinition/>
                        <RowDefinition Height="4"/>
                        <RowDefinition/>
                        <RowDefinition Height="4"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="4"/>
                        <RowDefinition/>
                        <RowDefinition Height="4"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Label x:Name="charLengthLabel" Content="Length:"/>
                    <local:NumericUpDown x:Name="charLengthIntegerUpDown" Grid.Column="1" Value="12"/>
                    <CheckBox x:Name="upperCaseCheckBox" Grid.Row="2" Grid.ColumnSpan="5" Content="Upper-case Letters (A - Z)"/>
                    <CheckBox x:Name="lowerCaseCheckBox" Grid.Row="4" Grid.ColumnSpan="5" Content="Lower-case Letters (a - z)"/>
                    <CheckBox x:Name="numbersCheckBox" Grid.Row="6" Grid.ColumnSpan="5" Content="Numbers (0 - 9)"/>
                    <CheckBox x:Name="symbolsCheckBox" Grid.Row="8" Grid.ColumnSpan="2" Content="Symbols (!, @, #, $, ...)"/>
                    <Button x:Name="symbolsHelpButton" Grid.Column="2" Grid.Row="8" Style="{StaticResource HelpButtonStyle}"/>
                    <CheckBox x:Name="customCharSetCheckBox" Grid.Row="10" Grid.ColumnSpan="3" VerticalContentAlignment="Center" Content="Others (your characters):"/>
                    <TextBox x:Name="customCharacterTextBox" Grid.Row="10" Grid.Column="3" Grid.ColumnSpan="2" IsEnabled="{Binding IsChecked, ElementName=customCharSetCheckBox}" ToolTip="E.g. ~!@#$%^&amp;*(),.=+&lt;&gt;"/>
                    <Expander x:Name="passwordEncordExpander" Grid.Row="12" Grid.ColumnSpan="5" Header="Password Encode" Template="{StaticResource CheckExpanderTemplate}">
                        <UniformGrid Columns="1">
                            <RadioButton x:Name="base64RadioButton" Content="Base64" Tag="{x:Static Password:PasswordEncoding.Base64}"/>
                            <RadioButton x:Name="hexLowerRadioButton" Content="hex (0 - f)" Tag="{x:Static Password:PasswordEncoding.HexLower}"/>
                            <RadioButton x:Name="hexUpperRadioButton" Content="Hex (0 - F)" Tag="{x:Static Password:PasswordEncoding.HexUpper}"/>
                        </UniformGrid>
                    </Expander>
                    <CheckBox x:Name="escapeDubiousCheckBox" Grid.Row="14" Grid.ColumnSpan="3" Content="Escape Dubious Symbols" Height="16" VerticalAlignment="Top"/>
                    <Button x:Name="escapeDubiousHelpButton" Grid.Column="3" Grid.Row="14" Style="{StaticResource HelpButtonStyle}"/>
                    <Expander x:Name="phoneticPasswordExpander" Grid.Row="16" Grid.ColumnSpan="5" Header="Pronouncing" Template="{StaticResource CheckExpanderTemplate}">
                        <UniformGrid Columns="1">
                            <RadioButton x:Name="phoneticRadioButton" Content="Phonetic"/>
                            <RadioButton x:Name="phoneticxRadioButton" Content="Phoneticx"/>
                        </UniformGrid>
                    </Expander>
                </Grid>
            </GroupBox>

            <!-- Words -->
            <GroupBox x:Name="wordsGroupBox" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="3">
                <GroupBox.Header>
                    <CheckBox x:Name="wordCheckBox" Content="Words (Pass*phrases*)"/>
                </GroupBox.Header>
                <Grid IsEnabled="{Binding IsChecked, ElementName=wordCheckBox}" Grid.IsSharedSizeScope="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="Auto" MinWidth="25"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="5" MaxWidth="5"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition SharedSizeGroup="rowItem"/>
                        <RowDefinition Height="4"/>
                        <RowDefinition SharedSizeGroup="rowItem"/>
                        <RowDefinition Height="4"/>
                        <RowDefinition SharedSizeGroup="rowItem"/>
                    </Grid.RowDefinitions>
                    <Label x:Name="wordCountLabel" VerticalContentAlignment="Center" Content="Word count:"/>
                    <local:NumericUpDown x:Name="wordCountIntegerUpDown" Grid.Column="1" Grid.ColumnSpan="3"/>
                    <Label x:Name="wordListLabel" Grid.ColumnSpan="2" Grid.Row="2" Content="Word-list file:"/>
                    <ComboBox x:Name="wordListComoBox" Grid.Column="2" Grid.ColumnSpan="4" Grid.Row="2" ItemsSource="{Binding Source={x:Static local:DefaultEntries.WordListFile}}"/>
                    <Button x:Name="fileBrowseButton" Grid.Column="7" Grid.Row="2" Style="{StaticResource FileBrowseButtonStyle}"/>
                    <CheckBox x:Name="specifyLengthCheckBox" Grid.ColumnSpan="3" Grid.Row="4" VerticalContentAlignment="Center" Content="Specify length*:"/>
                    <local:NumberBox x:Name="specifyLengthNumericBox" Grid.Column="3" Grid.Row="4" IsEnabled="{Binding IsChecked, ElementName=specifyLengthCheckBox}"/>
                    <CheckBox x:Name="cmbineWordsCharsCeckBox" Grid.Column="5" Grid.ColumnSpan="3" Grid.Row="4" VerticalContentAlignment="Center" Content="Combine words with characters" IsEnabled="{Binding IsChecked, ElementName=specifyLengthCheckBox}"/>
                </Grid>
            </GroupBox>

            <!--Format-->
            <GroupBox x:Name="passwordFormatGroupBox" Grid.Row="5" Grid.ColumnSpan="3" Grid.Column="1">
                <GroupBox.Header>
                    <CheckBox x:Name="passwordFormatCheckBox" Content="Password format"/>
                </GroupBox.Header>
                <Grid IsEnabled="{Binding IsChecked, ElementName=passwordFormatCheckBox}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ComboBox x:Name="passwordFormatComoBox" ItemsSource="{Binding Source={x:Static local:DefaultEntries.FormatList}}"/>
                    <Button x:Name="passwordFormatHelpButton" Grid.Column="2" VerticalAlignment="Center" Style="{StaticResource HelpButtonStyle}"/>
                </Grid>
            </GroupBox>

            <Border BorderBrush="Black" BorderThickness="0,0.375" Grid.Row="5" Grid.ColumnSpan="3" VerticalAlignment="Center"/>

            <!-- Password Generation -->
            <Label x:Name="passwordQuantityLabel" Foreground="Navy" Grid.Row="7" Grid.Column="1" FontWeight="Bold" Content="Quantity:"/>
            <local:NumberBox x:Name="passwordsQuantityNumericBox" Grid.Row="7" Grid.Column="2" Value="100"/>
            <Grid Grid.ColumnSpan="3" Grid.Row="9" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Button x:Name="generatePasswordButton" Content="Generate" Click="GeneratePasswordButton_Click"/>
                <Button x:Name="advancedOptionButton" Content="Advanced" Grid.Column="2"/>
            </Grid>
            <ListBox x:Name="passwordViewListBox" Width="{Binding ActualWidth, ElementName=passwordView}" Grid.Row="1" Style="{StaticResource PasswordViewStyle}" ItemsSource="{Binding Passwords, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local1:MainWindow}}}" />
        </Grid>
    </DockPanel>
</Window>
